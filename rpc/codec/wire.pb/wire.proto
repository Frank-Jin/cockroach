// Copyright 2013 <chaishushan{AT}gmail.com>. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

//	protorpc wire format wrapper
//
//	0. Frame Format
//	len : uvarint64
//	data: byte[len]
//
//	1. Client Send Request
//	Send RequestHeader: sendFrame(conn, hdr, len(hdr))
//	Send Request: sendFrame(conn, body, len(body))
//
//	2. Server Recv Request
//	Recv RequestHeader: recvFrame(conn, hdr, max_hdr_len, 0)
//	Recv Request: recvFrame(conn, body)
//
//	3. Server Send Response
//	Send ResponseHeader: sendFrame(conn, hdr, len(hdr))
//	Send Response: sendFrame(conn, body, len(body))
//
//	4. Client Recv Response
//	Recv ResponseHeader: recvFrame(conn, hdr, max_hdr_len, 0)
//	Recv Response: recvFrame(conn, body)
package wire;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.sizer_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;

message RequestHeader {
	optional uint64 id = 1 [(gogoproto.nullable) = false];
	optional string method = 2 [(gogoproto.nullable) = false];
}

message ResponseHeader {
	optional uint64 id = 1 [(gogoproto.nullable) = false];
	optional string error = 2 [(gogoproto.nullable) = false];
}
